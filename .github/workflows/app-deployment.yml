name: Expo CI CD

on:
  push :
    branches : [main]

env:
  APP_SRC_PATH: './app/defikarte/'    # set this to the path to your web app project, defaults to the repository root

jobs:
  Build-for-android:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - uses: actions/setup-java@v1.4.3
        with:
          java-version: '9.0.4' # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64
      - uses: expo/expo-github-action@v5
        with:
          expo-version: 4.x
          expo-packager: 'npm'
          expo-username: ${{ secrets.EXPO_CLI_USERNAME }}
          expo-password: ${{ secrets.EXPO_CLI_PASSWORD }}
          expo-cache: true
      - name: Install deps
        working-directory: ${{ env.APP_SRC_PATH }}
        run: npm install
      - name: Build Android APK Bundle
        working-directory: ${{ env.APP_SRC_PATH }}
        run: expo build:android --release-channel beta
  Push-to-Playstore:
    needs: [Build-for-android]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - uses: actions/setup-java@v1.4.3
        with:
          java-version: '9.0.4' # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64
      - uses: expo/expo-github-action@v5
        with:
          expo-version: 4.x
          expo-packager: 'npm'
          expo-username: ${{ secrets.EXPO_CLI_USERNAME }}
          expo-password: ${{ secrets.EXPO_CLI_PASSWORD }}
          expo-cache: true
      - name: Install deps
        working-directory: ${{ env.APP_SRC_PATH }}
        run: npm install
      - name: Upload to Google Play Console
        working-directory: ${{ env.APP_SRC_PATH }}
        run: expo upload:android --latest --key ${{ secrets.DEVELOPER_API }}
  build-for-IOS:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - uses: actions/setup-java@v1.4.3
        with:
          java-version: '9.0.4' # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64
      - uses: sinoru/actions-setup-xcode@v1.1.2
        with:
          xcode-version: '11.2.1' # Exact version of a Xcode version to use
          apple-id: ${{ secrets.EXPO_APPLE_ID }} # Apple ID to download from Apple Developer when Xcode not available in local
          apple-id-password: ${{ secrets.EXPO_APPLE_PASSWORD }}
      - uses: expo/expo-github-action@v5
        with:
          expo-version: 4.x
          expo-packager: 'npm'
          expo-username: ${{ secrets.EXPO_CLI_USERNAME }}
          expo-password: ${{ secrets.EXPO_CLI_PASSWORD }}
          expo-cache: true
      - name: Install deps
        working-directory: ${{ env.APP_SRC_PATH }}
        run: npm install
      - name: Build iOS app
        working-directory: ${{ env.APP_SRC_PATH }}
        run: expo build:ios --release-channel beta
        env:
            EXPO_APPLE_ID: ${{secrets.EXPO_APPLE_ID}}
            EXPO_APPLE_PASSWORD: ${{secrets.EXPO_APPLE_PASSWORD}}    
  publish-to-testflight:
    needs: [build-for-IOS]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - uses: actions/setup-java@v1.4.3
        with:
          java-version: '9.0.4' # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64
      - uses: sinoru/actions-setup-xcode@v1.1.2
        with:
          xcode-version: '11.2.1' # Exact version of a Xcode version to use
          apple-id: ${{ secrets.EXPO_APPLE_ID }} # Apple ID to download from Apple Developer when Xcode not available in local
          apple-id-password: ${{ secrets.EXPO_APPLE_PASSWORD }}
      - uses: expo/expo-github-action@v5
        with:
          expo-version: 4.x
          expo-packager: 'npm'
          expo-username: ${{ secrets.EXPO_CLI_USERNAME }}
          expo-password: ${{ secrets.EXPO_CLI_PASSWORD }}
          expo-cache: true
      - name: Install deps
        working-directory: ${{ env.APP_SRC_PATH }}
        run: npm install
      - uses: jakemwood/expo-apple-2fa@main
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        with:
          expo_apple_id: ${{ secrets.EXPO_APPLE_ID }}
          expo_apple_password: ${{ secrets.EXPO_APPLE_PASSWORD }}
          app_specific_password: ${{ secrets.EXPO_APP_SPECIFIC_PASSWORD }}
          tfa_phone_number: ${{ secrets.PHONE_NUMBER }}
